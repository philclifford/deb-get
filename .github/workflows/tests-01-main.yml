name: 01-main Tests

on:
  push:
    branches:
      - testing
      - 'test-**'
      - extrepo
    paths:
      - "01-main/packages/*"
  pull_request:
    types: [opened, closed, synchronize]
    paths:
      - "01-main/packages/*"
  workflow_dispatch:

# # This allows a subsequently queued workflow run to interrupt previous runs
# concurrency:
#   group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
#   cancel-in-progress: true

jobs:
  tests:
    strategy:
      matrix:
        os: [debian-latest]
        #,linuxmint,mxlinux,popos,zorin,kdeneon]
    runs-on: ${{ matrix.os }}


    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update

          # Dependencies to build the deb
          # sudo apt-get install build-essential devscripts debhelper -y

          # Dependencies for deb-get itself
          sudo apt-get install apt apt-transport-https bash coreutils curl dpkg gpg grep libc-bin lsb-release sed software-properties-common sudo wget -y

      - name: Initialize /etc/deb-get
        run: |
          sudo mkdir /etc/deb-get 2>/dev/null || true
          #echo "deb-get 1 github" | sudo tee /etc/deb-get/installed > /dev/null
          sudo cp ./01-main/manifest /etc/deb-get/01-main.repo
          sudo cp -r ./01-main/packages /etc/deb-get/01-main.d

      # Install added/changed packages to see if they install properly and are detected as such
      - name: Test package installations
        run: |
          chmod a+x ./deb-get
          export DEBIAN_FRONTEND=noninteractive
          set -x
          APPS="$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep "^01-main/packages/" | sed "s|^01-main/packages/||")"
          for APP in ${APPS}; do
            if grep -q -m 1 "^${APP}$" ./01-main/manifest; then
              ./deb-get install "${APP}"
              if ./deb-get show "${APP}" | grep -q "Installed:	No"; then
                echo "Failed to detect ${APP} as installed" >&2
                exit 1
              else
                ./deb-get purge "${APP}"
              fi
            fi
          done

      - name: Debian testing
        run: |
          export DEBIAN_FRONTEND=noninteractive
          set -x
          . /etc/os-release
          if [ $ID == debian ] ; then
            APPS="$(./deb-get csv |grep -v -e ppa -e virtualbox -e battery-monitor -e beersmith -e bitwig  \
            -e bitwarden -e deborah -e docker-desktop -e minigalaxy -e 'nala' -e openrgb -e quickobs \
            -e stremio \
            |cut -d\" -f2 |grep '^[s-z]'|grep -v -e '^s[a-t]' )"
          else
            APPS="$(./deb-get csv |grep -v -e virtualbox|cut -d\" -f2 )"
          fi
          for APP in ${APPS}; do
            if grep -q -m 1 "^${APP}$" ./01-main/manifest; then
              ./deb-get install "${APP}"
              if ./deb-get show "${APP}" | grep -q "Installed:	No"; then
                echo "Failed to detect ${APP} as installed" >&2
                exit 1
              else
                ./deb-get purge "${APP}"
              fi
            fi
            done
